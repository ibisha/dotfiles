[include]
	path = ~/.gitconfig.local

[core]
	editor = nvim
	precomposeunicode = true
	quotepath = false
	ignoreCase = false

[init]
	templatedir = ~/.git_template

[difftool]
	prompt = false

[difftool "bbdiff"]
	cmd = bbdiff --wait --resume \"$LOCAL\" \"$REMOTE\"
[mergetool "bbdiff"]
	cmd = bbdiff --wait --resume \"$LOCAL\" \"$REMOTE\"
[diff]
	tool = bbdiff
[merge]
	tool = bbdiff
	ff = false

[alias]
	difft = difftool --dir-diff
	merget = mergetool --dir-diff
	st = status
	sw = switch
	swc = switch -c
	br = branch
	cp = cherry-pick
	diffw = diff --word-diff # 行ごとの差分じゃなくて，単語レベルでの差分を色付きで表示する
	lo = log --color=always --pretty=format:'%Cgreen%h %Creset%cd %Cblue%ce %Cred%d %Creset%s'
	stu = status -uno # Untracked filesを表示せず，not stagedと，stagedだけの状態を出力する
	stali = stash list
	graph = log --graph --date=short --decorate=short --pretty=format:'%Cgreen%h %Creset%cd %Cblue%cn %Cred%d %Creset%s'
	find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
	show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
	version-tags = "tag -l --sort=-v:refname"

[fetch]
	prune = true

[pager]
	log = diff-highlight | less
	show = diff-highlight | less
	diff = diff-highlight | less

[credential]
	helper = osxkeychain
[pull]
	ff = only

[commit]
	verbose = true
	template = ~/.git_commit_template
