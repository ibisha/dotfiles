[[plugins]]
repo = 'Shougo/dein.vim'

####
# colorscheme
####
[[plugins]]
repo = 'vim-scripts/wombat256.vim'

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'joshdick/onedark.vim'

####
# Git
####
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
    let g:gitgutter_map_keys = 0
    nmap [g <Plug>(GitGutterPrevHunk)
    nmap ]g <Plug>(GitGutterNextHunk)
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
    nmap [fugitive] <Nop>
    map <leader>g [fugitive]
    nnoremap <silent> [fugitive]s :Gstatus<CR><C-w>T
    nnoremap <silent> [fugitive]a :Gwrite<CR>
    nnoremap <silent> [fugitive]c :Gcommit-v<CR>
    nnoremap <silent> [fugitive]b :Gblame<CR>
    nnoremap <silent> [fugitive]d :Gdiff<CR>
    nnoremap <silent> [fugitive]m :Gmerge<CR>
'''

####
# Filer
####
[[plugins]]
repo = 'Shougo/defx.nvim'
if = "has('nvim')"
build = ':UpdateRemotePlugins'
hook_add = '''
    nnoremap <silent> <leader>f :<C-u>Defx <CR>

    autocmd FileType defx call s:defx_my_settings()

    function! s:defx_my_settings() abort
        nnoremap <silent><buffer><expr> <CR>  defx#do_action('drop')
        nnoremap <silent><buffer><expr> c     defx#do_action('copy')
        nnoremap <silent><buffer><expr> m     defx#do_action('move')
        nnoremap <silent><buffer><expr> p     defx#do_action('paste')
        nnoremap <silent><buffer><expr> l     defx#do_action('drop')
        nnoremap <silent><buffer><expr> t     defx#do_action('open','tabnew')
        nnoremap <silent><buffer><expr> E     defx#do_action('drop', 'vsplit')
        nnoremap <silent><buffer><expr> P     defx#do_action('drop', 'pedit')
        nnoremap <silent><buffer><expr> o     defx#do_action('open_or_close_tree')
        nnoremap <silent><buffer><expr> K     defx#do_action('new_directory')
        nnoremap <silent><buffer><expr> N     defx#do_action('new_file')
        nnoremap <silent><buffer><expr> M     defx#do_action('new_multiple_files')
        nnoremap <silent><buffer><expr> C     defx#do_action('toggle_columns', 'mark:indent:icon:filename:type:size:time')
        nnoremap <silent><buffer><expr> S     defx#do_action('toggle_sort', 'time')
        nnoremap <silent><buffer><expr> d     defx#do_action('remove')
        nnoremap <silent><buffer><expr> r     defx#do_action('rename')
        nnoremap <silent><buffer><expr> !     defx#do_action('execute_command')
        nnoremap <silent><buffer><expr> x     defx#do_action('execute_system')
        nnoremap <silent><buffer><expr> yy    defx#do_action('yank_path')
        nnoremap <silent><buffer><expr> .     defx#do_action('toggle_ignored_files')
        nnoremap <silent><buffer><expr> ;     defx#do_action('repeat')
        nnoremap <silent><buffer><expr> h     defx#do_action('cd', ['..'])
        nnoremap <silent><buffer><expr> ~     defx#do_action('cd')
        nnoremap <silent><buffer><expr> q     defx#do_action('quit')
        nnoremap <silent><buffer><expr> <Tab> defx#do_action('toggle_select') . 'j'
        nnoremap <silent><buffer><expr> *     defx#do_action('toggle_select_all')
        nnoremap <silent><buffer><expr> j     line('.') == line('$') ? 'gg' : 'j'
        nnoremap <silent><buffer><expr> k     line('.') == 1 ? 'G' : 'k'
        nnoremap <silent><buffer><expr> <C-l> defx#do_action('redraw')
        nnoremap <silent><buffer><expr> <C-g> defx#do_action('print')
        nnoremap <silent><buffer><expr> cd    defx#do_action('change_vim_cwd')
    endfunction

    call defx#custom#option('_', {
        \ 'winwidth': 40,
        \ 'split': 'vertical',
        \ 'direction': 'topleft',
        \ 'show_ignored_files': 1,
        \ 'buffer_name': 'exlorer',
        \ 'toggle': 1,
        \ 'resume': 1,
        \ 'columns': 'indent:icons:filename:mark',
        \ })
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'kristijanhusak/defx-icons'

####
# View
####
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {
        \ 'colorscheme': 'onedark',
        \ 'active': {
        \   'left':  [ ['mode', 'paste'], ['gitbranch', 'readonly', 'myfilename', 'modified'], ],
        \   'right': [ [ 'lineinfo' ], [ 'percent' ], [ 'ale_ok', 'ale_warning', 'ale_error', 'char_code', 'fileformat', 'fileencoding', 'filetype' ], ],
        \ },
        \ 'component_function': {
        \   'myfilename': 'LightlineFilename',
        \   'gitbranch': 'FugitiveHead',
        \ },
        \ 'separator': { 'left': "\ue0b0", 'right': "\ue0b2" },
        \ 'subseparator': { 'left': "\ue0b1", 'right': "\ue0b3" },
        \ }

    function! LightlineFilename()
        return ('' != expand('%') ? expand('%') : '[No Name]')
    endfunction
'''

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'ntpeters/vim-better-whitespace'
hook_add = '''
    nmap <leader>w :<C-u>ToggleWhitespace<CR>
'''

[[plugins]]
repo = 'simeji/winresizer'

[[plugins]]
repo = 'luochen1990/rainbow'

####
# Move
####
[[plugins]]
repo = 'easymotion/vim-easymotion'

####
# Edit util
####
[[plugins]]
repo = 'machakann/vim-sandwich'

[[plugins]]
repo = 'mattn/sonictemplate-vim'

