##############
# 入力
[[plugins]]
repo = 'Shougo/neocomplete.vim'
hook_source = '''
  let g:neocomplete#enable_at_startup = 1
  let g:neocomplete#enable_smart_case = 1 " Use smartcase.
  let g:neocomplete#sources#syntax#min_keyword_length = 3 " Set minimum syntax keyword length.
  if !exists('g:neocomplete#keyword_patterns')
      let g:neocomplete#keyword_patterns = {}
  endif
  let g:neocomplete#keyword_patterns['default'] = '\h\w*'
'''
hook_post_source = '''
  # Plugin key-mappings.
  inoremap <expr><C-g>     neocomplete#undo_completion()
  inoremap <expr><C-l>     neocomplete#complete_common_string()
  # Recommended key-mappings.
  # <CR>: close popup and save indent.
  inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
  function! s:my_cr_function()
    return (pumvisible() ? "\<C-y>" : "" ) . "\<CR>"
    # For no inserting <CR> key.
    #return pumvisible() ? "\<C-y>" : "\<CR>"
  endfunction
  # <TAB>: completion.
  inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
  # <C-h>, <BS>: close popup and delete backword char.
  inoremap <expr><C-h> neocomplete#smart_close_popup()."\<C-h>"
  inoremap <expr><BS> neocomplete#smart_close_popup()."\<C-h>"

  # Enable omni completion.
  autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
  autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
  autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
  autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
  autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags

  # Enable heavy omni completion.
  if !exists('g:neocomplete#sources#omni#input_patterns')
    let g:neocomplete#sources#omni#input_patterns = {}
  endif
  #let g:neocomplete#sources#omni#input_patterns.php = '[^. \t]->\h\w*\|\h\w*::'
  #let g:neocomplete#sources#omni#input_patterns.c = '[^.[:digit:] *\t]\%(\.\|->\)'
  #let g:neocomplete#sources#omni#input_patterns.cpp = '[^.[:digit:] *\t]\%(\.\|->\)\|\h\w*::'
  #let g:neocomplete#sources#omni#input_patterns.python = '\h\w*\|[^. \t]\.\w*'
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets']
on_i = 1
on_ft = ['snippet']
 
[[plugins]]
repo = 'junegunn/vim-easy-align'
on_i = 1

[[plugins]]
repo = 'tyru/open-browser.vim'
on_source = ['previm']

# Markdown
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['md']
[[plugins]]
repo = 'kannokanno/previm'
on_ft = ['md']

# ファイル操作
[[plugins]]
repo   = 'Shougo/unite.vim'

[[plugins]]
repo   = 'Shougo/vimfiler.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = ['unite.vim']
 
[[plugins]]
repo = 'Shougo/neoyank.vim'
on_path = '.*'
on_i = 1
 
[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_i = 1
 
##############
# HTML
[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css', 'eruby']

##############
# python設定 

#[[plugins]]
#repo = 'hynek/vim-python-pep8-indent'
#on_ft = 'python'

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'

#[[plugins]]
#repo = 'lambdalisue/vim-pyenv'
#depends = 'davidhalter/jedi-vim'
#on_ft = 'python'

#[[plugins]]
#repo = 'jmcantrell/vim-virtualenv'
#on_ft = 'python'
#
#[[plugins]]
#repo = 'andviro/flake8-vim'
#on_ft = 'python'

